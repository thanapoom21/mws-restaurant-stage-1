{"version":3,"sources":["main.js"],"names":["restaurants","neighborhoods","cuisines","map","markers","document","addEventListener","event","fetchNeighborhoods","fetchCuisines","DBHelper","error","console","self","fillNeighborhoodsHTML","select","getElementById","setAttribute","id","forEach","neighborhood","option","createElement","innerHTML","value","append","fillCuisinesHTML","cuisine","window","initMap","loc","lat","lng","google","maps","Map","zoom","center","scrollwheel","updateRestaurants","cSelect","nSelect","cIndex","selectedIndex","nIndex","fetchRestaurantByCuisineAndNeighborhood","resetRestaurants","fillRestaurantsHTML","ul","m","setMap","restaurant","createRestaurantHTML","addMarkersToMap","li","image","className","src","imageUrlForRestaurant","imageAltForRestaurant","name","address","more","href","urlForRestaurant","marker","mapMarkerForRestaurant","addListener","location","url","push","navigator","serviceWorker","register","then","registration","log","scope","err"],"mappings":"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","file":"main.js","sourcesContent":["let restaurants,\r\n  neighborhoods,\r\n  cuisines\r\nvar map\r\nvar markers = []\r\n\r\n/**\r\n * Fetch neighborhoods and cuisines as soon as the page is loaded.\r\n */\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n  fetchNeighborhoods();\r\n  fetchCuisines();\r\n});\r\n\r\n/**\r\n * Fetch all neighborhoods and set their HTML.\r\n */\r\nfetchNeighborhoods = () => {\r\n  DBHelper.fetchNeighborhoods((error, neighborhoods) => {\r\n    if (error) { // Got an error\r\n      console.error(error);\r\n    } else {\r\n      self.neighborhoods = neighborhoods;\r\n      fillNeighborhoodsHTML();\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Set neighborhoods HTML.\r\n */\r\nfillNeighborhoodsHTML = (neighborhoods = self.neighborhoods) => {\r\n  const select = document.getElementById('neighborhoods-select');\r\n  select.setAttribute(\"aria-labelledby\", select.id);\r\n\r\n  neighborhoods.forEach(neighborhood => {\r\n    const option = document.createElement('option');\r\n    option.innerHTML = neighborhood;\r\n    option.value = neighborhood;\r\n    select.append(option);\r\n  });\r\n}\r\n\r\n/**\r\n * Fetch all cuisines and set their HTML.\r\n */\r\nfetchCuisines = () => {\r\n  DBHelper.fetchCuisines((error, cuisines) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      self.cuisines = cuisines;\r\n      fillCuisinesHTML();\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Set cuisines HTML.\r\n */\r\nfillCuisinesHTML = (cuisines = self.cuisines) => {\r\n  const select = document.getElementById('cuisines-select');\r\n  select.setAttribute(\"aria-labelledby\", select.id);\r\n\r\n  cuisines.forEach(cuisine => {\r\n    const option = document.createElement('option');\r\n    option.innerHTML = cuisine;\r\n    option.value = cuisine;\r\n    select.append(option);\r\n  });\r\n}\r\n\r\n/**\r\n * Initialize Google map, called from HTML.\r\n */\r\nwindow.initMap = () => {\r\n  let loc = {\r\n    lat: 40.722216,\r\n    lng: -73.987501\r\n  };\r\n  self.map = new google.maps.Map(document.getElementById('map'), {\r\n    zoom: 12,\r\n    center: loc,\r\n    scrollwheel: false\r\n  });\r\n  updateRestaurants();\r\n}\r\n\r\n/**\r\n * Update page and map for current restaurants.\r\n */\r\nupdateRestaurants = () => {\r\n  const cSelect = document.getElementById('cuisines-select');\r\n  const nSelect = document.getElementById('neighborhoods-select');\r\n\r\n  const cIndex = cSelect.selectedIndex;\r\n  const nIndex = nSelect.selectedIndex;\r\n\r\n  const cuisine = cSelect[cIndex].value;\r\n  const neighborhood = nSelect[nIndex].value;\r\n\r\n  DBHelper.fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, (error, restaurants) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      resetRestaurants(restaurants);\r\n      fillRestaurantsHTML();\r\n    }\r\n  })\r\n}\r\n\r\n/**\r\n * Clear current restaurants, their HTML and remove their map markers.\r\n */\r\nresetRestaurants = (restaurants) => {\r\n  // Remove all restaurants\r\n  self.restaurants = [];\r\n  const ul = document.getElementById('restaurants-list');\r\n  ul.innerHTML = '';\r\n\r\n  // Remove all map markers\r\n  self.markers.forEach(m => m.setMap(null));\r\n  self.markers = [];\r\n  self.restaurants = restaurants;\r\n}\r\n\r\n/**\r\n * Create all restaurants HTML and add them to the webpage.\r\n */\r\nfillRestaurantsHTML = (restaurants = self.restaurants) => {\r\n  const ul = document.getElementById('restaurants-list');\r\n  restaurants.forEach(restaurant => {\r\n    ul.append(createRestaurantHTML(restaurant));\r\n  });\r\n  addMarkersToMap();\r\n}\r\n\r\n/**\r\n * Create restaurant HTML.\r\n */\r\ncreateRestaurantHTML = (restaurant) => {\r\n  const li = document.createElement('li');\r\n\r\n  const image = document.createElement('img');\r\n  image.className = 'restaurant-img';\r\n  image.src = DBHelper.imageUrlForRestaurant(restaurant);\r\n  image.setAttribute(\"alt\", DBHelper.imageAltForRestaurant(restaurant));\r\n  li.append(image);\r\n\r\n  const name = document.createElement('h3');\r\n  name.innerHTML = restaurant.name;\r\n  li.append(name);\r\n\r\n  const neighborhood = document.createElement('p');\r\n  neighborhood.innerHTML = restaurant.neighborhood;\r\n  li.append(neighborhood);\r\n\r\n  const address = document.createElement('p');\r\n  address.innerHTML = restaurant.address;\r\n  li.append(address);\r\n\r\n  const more = document.createElement('a');\r\n  more.innerHTML = 'View Details';\r\n  more.href = DBHelper.urlForRestaurant(restaurant);\r\n  li.append(more)\r\n\r\n  li.setAttribute(\"role\", \"restaurant-lists\");\r\n\r\n  return li\r\n}\r\n\r\n/**\r\n * Add markers for current restaurants to the map.\r\n */\r\naddMarkersToMap = (restaurants = self.restaurants) => {\r\n  restaurants.forEach(restaurant => {\r\n    // Add marker to the map\r\n    const marker = DBHelper.mapMarkerForRestaurant(restaurant, self.map);\r\n    google.maps.event.addListener(marker, 'click', () => {\r\n      window.location.href = marker.url\r\n    });\r\n    self.markers.push(marker);\r\n  });\r\n}\r\n\r\n/**\r\n * Register a serviceWorker.\r\n */\r\nif ('serviceWorker' in navigator) {\r\n  window.addEventListener('load', function() {\r\n    navigator.serviceWorker.register('/sw.js').then(function(registration) {\r\n      // Registration was successful\r\n      console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n    }, function(err) {\r\n      // Registration failed :(\r\n      console.log('ServiceWorker registration failed: ', err);\r\n    });\r\n  });\r\n}\r\n"]}